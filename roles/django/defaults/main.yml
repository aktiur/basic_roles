---
# Define at least:
# django_app_name: app slug (will be used in services file names, and command names)
# django_domain: app domain name
# django_main_package: the package where are settings.py and uwsi.py

# Optional but probably needed :
# django_repo: the django repository to clone to django_src_directory
# django_secret: the secret used as SECRET env var

# Default user to create directories and run services
django_user: django
django_group: django

# By default, django role depends on virtualenv role
django_python: "{{ virtualenv_directory }}/bin/python"
django_uwsgi: "{{ virtualenv_directory }}/bin/uwsgi"

#-----------------------------------------------------------------------
# Source locations
#-----------------------------------------------------------------------

# Where is the manage script found ?
django_manage_file: "{{ django_src_directory|mandatory }}/manage.py"

# Where are the settings and wsgi modules found
django_settings_module: "{{ django_main_package|mandatory }}.settings"
django_wsgi_module: "{{ django_main_package|mandatory }}.wsgi"

#-----------------------------------------------------------------------
# Directories and script locations
# ----------------------------------------------------------------------

# Set up the main directory where everything will be installed
django_directory: "/srv/{{ django_app_name }}"
django_src_directory: "{{ django_directory }}/src"

# Set up virtualenv
virtualenv_directory: "{{ django_directory }}/virtualenv"
virtualenv_pipfile_directory: "{{ django_src_directory }}"
virtualenv_packages:
  - python-dotenv[cli]
  - uwsgi
  - ipython

# Set up where the static files will be collected, and where medias will be found
# and uploaded
django_static_directory: "{{ django_directory }}/static"
django_media_directory: "{{ django_directory }}/media"

# Where to save the env file generated by the
django_env_file: "{{ django_directory }}/env"

# Where to save uwsgi logs
django_uwsgi_log_directory: /var/log/{{ django_app_name }}-django


#------------------------------------------------------------------------
# Configuration
#------------------------------------------------------------------------

# Whether to install nginx server entries for the uwsgi services
django_nginx_conf: yes

# Whether to install utility scripts to execute django commands and get a shell
django_install_django_shell: yes
django_install_manage: yes

# UWSGI services to create and start
# By default, one service is created
# Each service is a hash with at least a name property. These additional properties may be
# defined:
# - runtime_directories: directories created by systemd in /run when the service is started, and cleaned when it stops
# - systemd_service_config: additional systemd service configuration that will be copied to the unit file
# - uwsgi_config: additional uwsgi configuration that will be copied to the ini file
# - user: user with which uwsgi will be executed
# - group: group with which uwsgi will be executed
# - socket_mode: permissions for the socket file (in octal format)
django_uwsgi_services:
  - name: django

# Celery services to create and start
# Each service must define the following properties:
# - name
# - app: the python module name to use as the celery application
# Each service may also define:
# - concurrency
# - runtime_directories
# - queues
# - celery_args
django_celery_services: []


# useful variables
django_run_with_env: '{{ django_python|quote }} -m dotenv.cli -f {{ django_env_file|quote }} run'
django_run_manage_command: '{{ django_run_with_env }} {{ django_python|quote }} {{ django_manage_file|quote }}'

