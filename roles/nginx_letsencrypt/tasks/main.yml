- name: Ensure certbot is installed
  apt:
    name: certbot
    state: present
    update_cache: yes
    cache_valid_time: "{{ apt_cache_valid_time | default (3600) }}"

- name: Create letsencrypt webroot directory
  file: path=/var/www/letsencrypt state=directory mode=0755

- name: Generate certificates (deprecated style)
  command: "certbot certonly --webroot -w /var/www/letsencrypt --cert-name {{ letsencrypt_domains[0] }} --expand -d {{ letsencrypt_domains | join(',') }} -m {{ letsencrypt_email }} -n --agree-tos"
  register: certbot
  changed_when: "'no action taken.' not in certbot.stdout"

- name: Generate certificates
  command: >-
    certbot certonly
    --webroot -n --expand --agree-tos
    -w /var/www/letsencrypt
    -m "{{ letsencrypt_email }}"
    --cert-name "{{ item.name }}"
    {% if item.alternatives %}-d "{{ item.alternatives | join(',') }}"{% endif %}
  loop: "{{ letsencrypt_certificates }}"

- name: Install hook for nginx reload
  copy:
    src: nginx.sh
    dest: /etc/letsencrypt/renewal-hooks/post/nginx.sh
    mode: 744

- name: Create unit for failure alerts
  template:
    src: letsencrypt-alert@.service.j2
    dest: /etc/systemd/system/letsencrypt-alert@.service
  when: letsencrypt_alert is defined

- name: Activate unit for failure alerts
  lineinfile:
    path: /lib/systemd/system/certbot.service
    insertafter: \[Unit\]
    line: "OnFailure=letsencrypt-alert@%n.service"
  when: letsencrypt_alert is defined

- name: Ensure domains point to localhost in hosts
  lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1\s+localhost\s(\w*)'
    line: 127.0.0.1 localhost \1 {{ letsencrypt_domains | join(' ') }}
    backrefs: yes

- name: Ensure domains point to localhost in hosts (ipv6)
  lineinfile:
    path: /etc/hosts
    regexp: '^::1\s+localhost\sip6-localhost\sip6-loopback'
    line: "::1 localhost ip6-localhost ip6-loopback {{ letsencrypt_domains | join(' ') }}"
    backrefs: yes

- name: Install Nginx "catch-all" server block for port 443
  template:
    src: 99-ssl-catchall.conf.j2
    dest: /etc/nginx/sites-available/99-ssl-catchall.conf
  notify:
    - reload nginx

- name: Ensure Nginx "catch-all" configuration is enabled
  file:
    path: /etc/nginx/sites-enabled/99-ssl-catchall.conf
    src: ../sites-available/99-ssl-catchall.conf
    state: link
  notify:
    - reload nginx
