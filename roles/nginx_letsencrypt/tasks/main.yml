---
- name: Ensure certbot is installed
  ansible.builtin.apt:
    name: certbot
    state: present

- name: Create letsencrypt webroot directory
  ansible.builtin.file:
    path: /var/www/letsencrypt
    state: directory
    mode: "0755"

- name: Generate certificates (deprecated style)
  ansible.builtin.command: >-
    certbot certonly
    --webroot -n --expand --agree-tos
    -w /var/www/letsencrypt
    -m {{ letsencrypt_email }}
    --cert-name {{ letsencrypt_domains[0] }}
    -d {{ letsencrypt_domains | join(',') }}
  when: letsencrypt_domains | length > 0
  register: certbot
  changed_when: "'no action taken.' not in certbot.stdout"

- name: Generate certificates
  ansible.builtin.command: >-
    certbot certonly
    --webroot -n --expand --agree-tos
    -w /var/www/letsencrypt
    -m "{{ letsencrypt_email }}"
    --cert-name "{{ item.name }}"
    -d "{{ item.name }}
    {% if item.alternatives | default([]) -%}
      ,{{ item.alternatives | join(',') }}
    {%- endif -%}"

  loop: "{{ letsencrypt_certificates }}"
  register: certbot
  changed_when: "'no action taken.' not in certbot.stdout"

- name: Install hook for nginx reload
  ansible.builtin.copy:
    src: nginx.sh
    dest: /etc/letsencrypt/renewal-hooks/post/nginx.sh
    mode: "0744"

- name: Create unit for failure alerts
  ansible.builtin.template:
    src: letsencrypt-alert@.service.j2
    dest: /etc/systemd/system/letsencrypt-alert@.service
    mode: "0644"
  when: letsencrypt_alert is defined

- name: Activate unit for failure alerts
  ansible.builtin.lineinfile:
    path: /lib/systemd/system/certbot.service
    insertafter: \[Unit\]
    line: "OnFailure=letsencrypt-alert@%n.service"
  when: letsencrypt_alert is defined

- name: Ensure domains point to localhost in hosts
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '^127\.0\.0\.1\s+localhost\s(\w*)'
    line: 127.0.0.1 localhost \1 {{ letsencrypt_domains | join(' ') }}
    backrefs: true

- name: Ensure domains point to localhost in hosts (ipv6)
  ansible.builtin.lineinfile:
    path: /etc/hosts
    regexp: '^::1\s+localhost\sip6-localhost\sip6-loopback'
    line: >-
      ::1 localhost ip6-localhost ip6-loopback
      {{ letsencrypt_domains | join(' ') }}
    backrefs: true

- name: Install Nginx "catch-all" server block for port 443
  ansible.builtin.template:
    src: 99-ssl-catchall.conf.j2
    dest: /etc/nginx/sites-available/99-ssl-catchall.conf
    mode: "0644"
  notify:
    - Reload nginx

- name: Ensure Nginx "catch-all" configuration is enabled
  ansible.builtin.file:
    path: /etc/nginx/sites-enabled/99-ssl-catchall.conf
    src: ../sites-available/99-ssl-catchall.conf
    state: link
  notify:
    - Reload nginx
