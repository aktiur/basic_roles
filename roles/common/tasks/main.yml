---
- name: Check we are on Ubuntu release
  ansible.builtin.fail:
    msg: You need to use Ubuntu Server
  when: ansible_distribution != "Ubuntu"

- name: Check we are on correct release
  ansible.builtin.fail:
    msg: You need to use one of the supported releases
  when: ansible_distribution_release not in supported_releases

- name: Ensure sudoers file is present
  ansible.builtin.copy:
    src: sudoers
    dest: /etc/sudoers
    owner: root
    group: root
    mode: "0440"

- name: Upgrade apt packages
  ansible.builtin.apt:
    upgrade: dist
    update_cache: true
    cache_valid_time: "{{ apt_cache_valid_time | default(3600) }}"

- name: Ensure essentials packages are installed
  ansible.builtin.apt:
    name:
      - build-essential
      - python{{ system_python_version }}-pip
      - software-properties-common
      - apt-transport-https
      - apt-utils
      - debconf-utils
      - git
      - unzip
      - net-tools
      - ufw
      - sudo

- name: Ensure packages specific to bionic and forward are installed
  ansible.builtin.apt:
    name:
      - rsyslog
  when: ansible_distribution_release != 'xenial'

- name: Ensure additional filesystems are mounted
  ansible.posix.mount:
    state: mounted
    src: "{{ item.src }}"
    path: "{{ item.path }}"
    fstype: "{{ item.fstype | default('ext4') }}"
  loop: "{{ mounts }}"

- name: Ensure required locales are installed
  community.general.locale_gen:
    name: "{{ item }}"
    state: present
  with_items: "{{ locales }}"

- name: Ensure default locale is set
  ansible.builtin.lineinfile:
    path: /etc/default/locale
    regexp: "^LANG="
    line: "LANG={{ default_locale }}"
  when: default_locale is defined

- name: Ensure system wide known hosts file exists
  ansible.builtin.file:
    path: /etc/ssh/ssh_known_hosts
    state: touch
    owner: root
    group: root
    mode: "0644"
    modification_time: preserve
    access_time: preserve

- name: Ensure github is in known hosts
  ansible.builtin.lineinfile:
    path: /etc/ssh/ssh_known_hosts
    regexp: "^github.com "
    line: "github.com ssh-rsa AAAAB3NzaC1yc2EAAAABIwAAAQEAq2A7hRGmdnm9tUDbO9IDS\
      wBK6TbQa+PXYPCPy6rbTrTtw7PHkccKrpp0yVhp5HdEIcKr6pLlVDBfOLX9QUsyCOV0wzfjIJ\
      NlGEYsdlLJizHhbn2mUjvSAHQqZETYP81eFzLQNnPHt4EVVUh7VfDESU84KezmD5QlWpXLmvU\
      31/yMf+Se8xhHTvKSCZIFImWwoG6mbUoWf9nzpIoaSjB+weqqUUmpaaasXVal72J+UX2B+2RP\
      W3RcT0eOzQgqlJL3RKrTJvdsjE3JEAvGq3lGHSZXy28G3skua2SmVi/w4yCE6gbODqnTWlg7+\
      wC604ydGXA8VJiS5ap43JXiUFFAaQ=="

- name: "Ensure fail2ban is {{ cloudflare_protected | bool | \
    ternary('absent', 'present') }}"
  ansible.builtin.apt:
    name: fail2ban
    state: "{{ cloudflare_protected | bool | ternary('absent', 'present') }}"

- name: Ensure nginx is enabled in fail2ban
  ansible.builtin.copy:
    src: fail2ban_nginx.conf
    dest: /etc/fail2ban/jail.d/nginx.conf
    mode: "0644"
  notify:
    - Restart fail2ban
  when: not cloudflare_protected | bool

- name: Ensure journal directory is created so that logs are persisted
  ansible.builtin.file:
    path: /var/log/journal
    state: directory
    group: systemd-journal
    mode: "02755"
  notify:
    - Restart journald


# Dans sa séquence d'initialisation, UFW fait un truc un peu bête : il règle la
# politique par défaut *avant* d'avoir inséré la règle qui autorise les paquets
# appartenant à des connexions déjà ouvertes.
#
# Résultat, si on met la politique par défaut à DENY, le changement de politique
# se met à bloquer la connexion des disques réseaux, ce qui coupe les connexions
# déjà existantes… et notamment celles aux disques réseau, ce qui fait planter
# le boot.
#
# Du coup, comme workaround, on indique comme politique par défaut ALLOW, mais
# on rajoute à la chaîne qu'UFW utilise comme post-traitement pour les paquets
# entrants une règle qui droppe tout, dans un fichier que UFW charge *après*
# avoir créé la règle qui autorise les paquets des connexions ouvertes.
#
# On retrouve donc bien le comportement souhaité, avec l'inconvénient majeur que
# rien de tout cela n'est directement visible dans l'interface de UFW qui
# affiche simplement que la politique par défaut est ALLOW.

- name: Ensure ufw default allow not to block nbd
  community.general.ufw:
    policy: allow

- name: Ensure ufw allow ssh
  community.general.ufw:
    rule: allow
    port: "22"

- name: Ensure ufw drop all packets in "after rules"
  ansible.builtin.lineinfile:
    path: /etc/ufw/after{{ item }}.rules
    line: "-A ufw{{ item }}-reject-input -j DROP"
    insertbefore: COMMIT
  with_items:
    - ''
    - '6'

- name: Enable ufw
  community.general.ufw:
    state: enabled

- name: Ensure diagnostic tools are installed
  ansible.builtin.apt:
    name:
      - mtr
      - knot-dnsutils
      - nmap
      - iftop
      - htop
      - vnstat
      - hping3
      - nload

- name: Create google fonts directory
  ansible.builtin.file:
    path: "{{ google_fonts_directory }}"
    state: directory
    mode: "0755"

- name: Downlad required google fonts
  ansible.builtin.get_url:
    url: "https://fonts.google.com/download?family=\
      {{ required_fonts | join('|') | urlencode }}"
    dest: /tmp/google_fonts.zip
    mode: "0644"
  when: google_fonts_required|length > 0

- name: Unpack google fonts
  ansible.builtin.unarchive:
    src: /tmp/google_fonts.zip
    dest: "{{ google_fonts_directory }}"
    remote_src: true
  register: fonts_copied
  when: google_fonts_required|length > 0

- name: Update font cache
  ansible.builtin.command: fc-cache
  changed_when: true
  when: google_fonts_required|length > 0 and fonts_copied.changed
